// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "AAStar Support",
            "url": "https://aastar.xyz"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/account/v1/bind": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "bind a account to community node",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "parameters": [
                    {
                        "description": "Account Binding",
                        "name": "bind",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Bind"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/api/account/v1/sync": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "download accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "how many accounts to download",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.Member"
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/v1/login": {
            "post": {
                "description": "Get AccessToken By ApiKey",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "description": "AccessToken Model",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ClientCredential"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/api/dashboard/v1/node": {
            "get": {
                "description": "get node members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.Bind": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                }
            }
        },
        "request.ClientCredential": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                }
            }
        },
        "storage.Member": {
            "type": "object",
            "properties": {
                "hashedAccount": {
                    "type": "string"
                },
                "privateKeyVault": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "rpcAddress": {
                    "type": "string"
                },
                "rpcPort": {
                    "type": "integer"
                },
                "version": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "description": "Type 'Bearer \\\u003cTOKEN\\\u003e' to correctly set the AccessToken",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
