definitions:
  pkg.JsonRpcRequest:
    properties:
      id:
        type: integer
      jsonrpc:
        type: string
      method:
        type: string
      params:
        items: {}
        type: array
    type: object
  plugin_passkey_relay_party.SiginInResponse:
    properties:
      code:
        type: integer
      expire:
        type: string
      token:
        type: string
    type: object
  request.Bind:
    properties:
      account:
        type: string
      publicKey:
        type: string
    type: object
  request.Transfer:
    type: object
  response.Response:
    properties:
      result:
        $ref: '#/definitions/response.Result'
    type: object
  response.Result:
    properties:
      code:
        type: integer
      cost:
        type: string
      data: {}
      message:
        type: string
    type: object
  seedworks.Chain:
    enum:
    - ethereum-mainnet
    - ethereum-sepolia
    - optimism-mainnet
    - optimism-sepolia
    - arbitrum-one
    - arbitrum-nova
    - arbitrum-sepolia
    - scroll-mainnet
    - scroll-sepolia
    - starknet-mainnet
    - starknet-sepolia
    - base-mainnet
    - base-sepolia
    type: string
    x-enum-varnames:
    - EthereumMainnet
    - EthereumSepolia
    - OptimismMainnet
    - OptimismSepolia
    - ArbitrumOne
    - ArbitrumNova
    - ArbitrumSpeolia
    - ScrollMainnet
    - ScrollSepolia
    - StarketMainnet
    - StarketSepolia
    - BaseMainnet
    - BaseSepolia
  seedworks.FinishRegistration:
    properties:
      email:
        type: string
      network:
        $ref: '#/definitions/seedworks.Chain'
      origin:
        type: string
    type: object
  seedworks.PaymentSign:
    properties:
      amount:
        type: string
      email:
        type: string
      nonce:
        type: string
      origin:
        type: string
    required:
    - amount
    - email
    - nonce
    - origin
    type: object
  seedworks.Registration:
    properties:
      captcha:
        type: string
      email:
        type: string
      origin:
        type: string
    type: object
  seedworks.RegistrationPrepare:
    properties:
      email:
        type: string
    type: object
  seedworks.SiginIn:
    properties:
      captcha:
        type: string
      email:
        type: string
      origin:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/account/v1/bind:
    post:
      consumes:
      - application/json
      description: bind a account to community node
      parameters:
      - description: Account Binding
        in: body
        name: bind
        required: true
        schema:
          $ref: '#/definitions/request.Bind'
      - description: apiKey
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
      tags:
      - Account
  /api/account/v1/sign:
    post:
      consumes:
      - application/json
      description: sign a account to community node
      produces:
      - application/json
      responses:
        "201":
          description: Created
      tags:
      - Account
  /api/account/v1/transfer:
    post:
      consumes:
      - application/json
      description: transfer a TX
      parameters:
      - description: Transfer TX
        in: body
        name: tx
        required: true
        schema:
          $ref: '#/definitions/request.Transfer'
      - description: apiKey
        in: query
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
      tags:
      - Account
  /api/dashboard/v1/node:
    get:
      consumes:
      - application/json
      description: get node members
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      tags:
      - Dashboard
  /api/healthz:
    get:
      consumes:
      - application/json
      description: Get Healthz
      responses:
        "200":
          description: OK
      tags:
      - Healthz
  /api/passkey/v1/imauthz:
    get:
      description: a demo api to show api is authorized after signin
      responses:
        "200":
          description: user is authorized
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
      security:
      - JWT: []
      tags:
      - Demo
  /api/passkey/v1/payment/sign:
    post:
      consumes:
      - application/json
      description: Begins the sign process for payment
      parameters:
      - description: Sign payment details
        in: body
        name: paymentSign
        required: true
        schema:
          $ref: '#/definitions/seedworks.PaymentSign'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: sign payment request credential assertion
      tags:
      - Plugins Passkey
  /api/passkey/v1/payment/sign/verify:
    post:
      consumes:
      - application/json
      description: Finish the sign process for payment
      parameters:
      - description: Sign payment details
        in: body
        name: paymentSign
        required: true
        schema:
          $ref: '#/definitions/seedworks.PaymentSign'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: sign payment request credential assertion
      tags:
      - Plugins Passkey
  /api/passkey/v1/reg:
    post:
      consumes:
      - application/json
      description: Begin the registration process
      parameters:
      - description: Begin Registration
        in: body
        name: registrationBody
        required: true
        schema:
          $ref: '#/definitions/seedworks.Registration'
      responses:
        "200":
          description: OK
      summary: sign up step2. begin registration
      tags:
      - Plugins Passkey
  /api/passkey/v1/reg/prepare:
    post:
      consumes:
      - application/json
      description: Send captcha to email for verifying belongs
      parameters:
      - description: Send Captcha to Email
        in: body
        name: registrationBody
        required: true
        schema:
          $ref: '#/definitions/seedworks.RegistrationPrepare'
      responses:
        "200":
          description: OK
      summary: sign up step1. send code
      tags:
      - Plugins Passkey
  /api/passkey/v1/reg/verify:
    post:
      consumes:
      - application/json
      description: Verify Passkey Registration
      parameters:
      - description: Verify Registration
        in: body
        name: registrationBody
        required: true
        schema:
          $ref: '#/definitions/seedworks.FinishRegistration'
      responses:
        "200":
          description: OK
      summary: sign up step3. Finish Registration
      tags:
      - Plugins Passkey
  /api/passkey/v1/sign:
    post:
      consumes:
      - application/json
      description: Begins the sign in process
      parameters:
      - description: Sign in details
        in: body
        name: signIn
        required: true
        schema:
          $ref: '#/definitions/seedworks.SiginIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: sign in step 1. request credential assertion
      tags:
      - Plugins Passkey
  /api/passkey/v1/sign/verify:
    post:
      consumes:
      - application/json
      description: Finish the sign in process
      parameters:
      - description: Origin
        in: query
        name: origin
        required: true
        type: string
      - description: Email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/plugin_passkey_relay_party.SiginInResponse'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: sign in step 2. verify credentials
      tags:
      - Plugins Passkey
  /api/v1/airaccount_rpc/{network}:
    post:
      consumes:
      - application/json
      description: AirAccount JSON-RPC API
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: JsonRpcRequest Model
        in: body
        name: rpcRequest
        required: true
        schema:
          $ref: '#/definitions/pkg.JsonRpcRequest'
      - description: apiKey
        in: query
        name: apiKey
        required: true
        type: string
      responses:
        "200":
          description: OK
      tags:
      - JsonRpcHandle
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
