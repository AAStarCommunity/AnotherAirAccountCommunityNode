package seedworks

import (
	"reflect"
	"testing"
)

func TestEncryptAndDecrypt(t *testing.T) {
	v1 := "f9754d8170147661fd2dcb24419c99e752057af7d439cb3ed8f9e26d319cb3ded275fdecba6a0181d03a41435207dfde04bccf8b4a7a1a18bce8ac45a972c2e6e2892547313f115fa9dd255ef09bcd82bce9d93b069ee6576657b5abd1b9f7c9743a530dcb8f5ddce3a5fb8e9cca919a3938566c775597e2171d2cd0e50f5f48862f20b06b38705bbc0f790bd6514312a3b750651cdc0f7e8bdbc916779f10e19f512befe44ab3661cc791a45fa91a2b965a3fcae403cf962061e32b67ae2b00c08909fe4a270aa96927ad8c337a4f8b8d880430c1ff2109d42f91390d9613b8957097762498bc9cb69e0fafad7552a28bede7ba6adfa763fb90e263542454edf329e77caf50e1fdf3e3a2dde6bd3a05fe9b0a1a1edf9837679f55426cd8bf3fa7257dcb90bcba27b0c539c885bf3b37c6a158e81536f46bf0b1acaff057612cb239f3b022970985f650b57248184768892540af20d32e7a5a77b900c9ef192dad344317492790e08ff605b504a4c229f22fa910bb126c3ee22a9b9da2b14d4585e8ff3d2934cbddbd763541a1722880523b9df1e9e03b7b8f15cf71fc3541200b7978f4d46b71f6ca1c9e7ee23b0cc76c7d5b0edab56eba5b8641f48dd8071f7a8fa7c0cb0ccb8f795bec6b1a8a942fb971ec959a55e8c9a35215beee9b245c7eaf35af38b66d8404d3979b598fb52e2267890aa3b980f216eae1e0311c9e565aef6b005e24402977629cd427fc8ea105775373ce743422cc8d56e00bcd3eb2ed9ca50a64c4a4b60e101aedddb5bab647386325723bf06ee4d5e2ddb9ac75f145cb459ed5752139e81fbcc9e6a19df323807b0625f3e39fb909718ed7974cdf4391f4aa339877b24ab4f31dde57c269c897779d98dc2c34e375595742bd18d4ca95b9baa3a2e4974592851fb81e7d3ef431829e568b2c33eb75985c8e906ac78e9466e1ada77621f13ba054599e506cb86f51a0b1a83bbad4a367918d33d78a428e6d79f6e8508851533265a3898cddbe5cb04deec273703108d15ec8733f0b046548ee7fec668d5a16d3aa1cc2a4c2a65f84ddc6d56b3472c4ea8f484356b0cdd355c44608d3abd2f6b02deae6b3bc97ca1a93ced144f372d556bcbdef71cc712ed5cee03224234e13155f4f6109bd2892e0ebc7e35af1739feef79a817f233b866d55cca38ddc06c33630b5f0035d2be1ceffd9df1891c4b618994bf9a1708c77a948da0a8f30a8a2656281b70520d1e6a15a155df5bb7bfa85071226baef328efd98a166bd9e84bb6842840297d0b63bd450497da89a7487b2a4707a0c9106c6e39ac55ec3ea9b0ff2a6da2f85059d891fbdda7fbf9b79b74dd204a3234fad326170ab18ac2bf038bd317d382b113f2d7f5858e1ae38236794914f68885379c830cd0bbdeda504e5dda2344ed51ca34254be4938a89344ded46c93d9c2ac992ff8cbf583c8916cf04c985507e2b976f96f1d2a0896c729418b0b77a52230776a0c9eca42d0b28e4687e817f865f1c7f76079e4b5305a1ec9530fbc840d00483e0cdc132b8a66898215be13edb89bf985af860606ab8b466444cb5b552f8445071dd6ae390bee0809bab0f3650323f9f74891df100c8bf9c0b6f9ea0416087d160e51333a"
	v2 := "0256316adb1004021421da7ba37d046c66e15f601dd84e8407811aa00e2dd51705e674e27f15182d1523a13667c9acadab3c31b8ddd0ca8c7966fc96034b2f3c06aeb530b79a05f35ecc23a4047d976c84d3be1e668ec3bddd2b0fa8b23ad1ccb313f764b5130ae5f6e0fdabe0e198e3bd31e7cb6de2a442919a1d8f9c9b0fd18bdf1d187042f36bd889f069407d2bb297814c641631fe1486f1b8aac804119733b99602c2f2e42352c2d8959250b75ab8e24bfc0361409253d08f9574bb9cddf7d993b63114f86bd2b47d9e658d2bcd403556ee46eb1916f1f754030f84a530acfb7fdf6831bc0ceec1b43bc5023fb59fbc1faee29f1378f42f5add094a77371d5af7212d0606f4f8ee5eb2b42422fdd79632b5c3b6a632f0b3afb27031aff890c382af41dd24d939f021d38103cb773120165998f9834cc38a322128e101c81e8fbe7104c2cf2ca5a1bf1d61c3358ec8d57ed9de722ba2e11288e0ee8a471d318636a07793fd0be081b3d5fd16f12d72f3f0ab021aba51c525675d745cdcec0309e9ace9a8f1285275b652f3667789551621060e979dd34719af67fe32c713e2d94f88d0428cf31ea49fc5a86a21fc7043d0dfb498cdf787d8f10c61e3669a4e8d200bc6f144e2aa54f0af26b6d1b91c9178c3da8732e1c717197427704600ca6d65eb871d89b630877e3ed89b3f7f0becddef0170c490fca0b2c8bbd47ce15b028fd4269e1bc2d909bb5415f32df99641c882642121a62e2fd1c2d8b7181b92d58a63dbfe4242283fcf6cfb568925fe1b42c088f73a7b7859b84d3967247b5d9e8a22a5dcf4a960515a27b48c719588b45ed27ada7c0baeebb505db7cfd7b29c2517ef8d6d97ce4dfe2410615abe2eb6c3ffa2bc7878a3be9ca24f895c386f8e85ffcdcfb4afadefb3c016d7e0a0c36a79e4e8e1ba0bda26d3db8b99b620324150c2f06d237d5bbfcda578339c6322504b2673603c84e66a7af1d113589c6b6dbc1e1b1cb521fe2138a586b2ebfd5a2e32ab85c29bf79c826dc8198e70b7a748931ea096e4376238226b8c7d1b8e4980929d32d4b713efab60e7abc20c7b830626ea1986e2c9f0b2e8eda2264183cf5032885fd137ff33cd63ca6d99b4cdabfcad6cf6578fe05e2c19c607c295475f51a9f5e6385803990c69fb8b36b5f9afd972d9b290d835013128c59c264325d38234b558790d7703a9b21660c0a121a744eeccd4e363af77b052fb9641874c462765f7824de8d079be6599a880f6ec36f412518c86e24f1b046dea0db2de4868d1bc89e0b8d18cfafc9d06ef35e610a8903677437552768ed7f7e1e8e72409e8090ec4b1593df31d0eb476793a68904d96545117906a81abd0bce58f0ceccd9284d130fa9e84f64da05abe01013dad8ceda57fa55f5701b6153d9f110b18b629c7f7604669682e3a728018fa8d3f97f09b30e4a2c524156ba1d8d6d66f243c7aa97e0e28bb6783d0aba1e452163398ed388a0e2f17fa9734a945c7e0280f0cc4f6de886430f496d4e0a5978805b7040ae7d628d7fd5200cee32fa677e9d67cc1e2472c9ab3efb547de6c81a8d6837d8665579a48f5a730dc4cafbe8ca0bcb9768b935e9ad749f4e54ecd4b18a8b64cb4149933cfb5b"
	m1, _ := Decrypt([]byte("1234567890abcdef"), &v1)
	m2, _ := Decrypt([]byte("1234567890abcdef"), &v2)

	if len(m1) == 0 || len(m2) == 0 {
		t.Errorf("Decryption failed")
	}

	u1, _ := UnmarshalUser(&m1)
	u2, _ := UnmarshalUser(&m2)

	if u1 == nil || u2 == nil {
		t.Errorf("Unmarshalling failed")
	}

	if !reflect.DeepEqual(u1.chainAddresses, u2.chainAddresses) {
		t.Errorf("Decrypted data not equal")
	}

	if !reflect.DeepEqual(u1.id, u2.id) {
		t.Errorf("Decrypted data not equal")
	}

	if !reflect.DeepEqual(u1.email, u2.email) {
		t.Errorf("Decrypted data not equal")
	}

	if !reflect.DeepEqual(u1.wallet, u2.wallet) {
		t.Errorf("Decrypted data not equal")
	}
}
